name: Build and Push Docker Image for Backend

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Fazer o checkout do cÃ³digo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar o JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Construir o JAR com Maven
      - name: Build JAR with Maven
        run: mvn clean package

      # 4. Criar o arquivo .env dinamicamente
      - name: Create .env file
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "GOOGLE_CALENDAR_CREDENTIALS=${{ secrets.GOOGLE_CALENDAR_CREDENTIALS }}" >> .env
          echo "GOOGLE_CALENDAR_ID=${{ secrets.GOOGLE_CALENDAR_ID }}" >> .env
          echo "EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}" >> .env
          echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> .env

      # 5. Fazer login no Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 6. Construir e enviar a imagem Docker
      - name: Build and push Docker image
        run: |
          docker build -t giuliacarmona/api:latest .
          docker push giuliacarmona/api:latest